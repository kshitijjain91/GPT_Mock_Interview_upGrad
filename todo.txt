Phase-1: Launch MVP
- Create clear git workflow
- End interview after 20 questions 
- Put text to speech 
- Store audio files somewhere on cloud/AWS
- Set up cloud DB 
- Raise exception if openAI error [APIConnectionError]; raise gradio error (whisper / ChatCompletion / Completion)
- Create DS and DM versions
- Launch MVP on LMS 

Phase-2: Iterate
- Consult someone from tech on this: Where should this be deployed, which DBs, should we launch on gradio and meanwhile build elsewhere etc 
- Speed up transcription (segmenting/compression/other techniques?)
- Fine tune: 
	- Provide common interview questions to GPT and guide GPT to ask questions in a representative flow; create rubric for each question so grading quality is better
	- Provide hints if unsure e.g. Hint: Think about things like normality, homoscedasticity, independence, and absence of multicollinearity. 
	- If response is imperfect, probe deeper on the same topic
	- Question - response pair is not exhaustive!
	- Test reliability: Should be 10/10 for perfect reponses; less than 4/10 for bad responses
- Improve UI on gradio
	- Add progress bar / some way to tell user how much interview is left
	- Hint functionality
	- P2 stuff:
		- Add flags 
		- Set difficulty level
		
________________________________________________________________________________________________________________________________________
## Macro (Long Term) Todo 
- Create plan for adoption and scale/impact (align with VG) 
- Build long term product plan: Ideally all data should be stored in a DB so we can fine tune the model continuously


